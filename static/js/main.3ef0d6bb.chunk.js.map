{"version":3,"sources":["Cube.js","Text.js","Lines.js","InvisibleCube.js","DestinationCup.js","Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Cube","props","args","position","attach","color","Text","children","font","useLoader","THREE","config","useMemo","size","height","opacity","transparent","scale","Lines","points","x","y","flag","i","push","pop","Line","lineWidth","InvisibleCube","DestinationCup","fbx","useFBX","object","dispose","rotation","Math","PI","Canva","useState","cubes","setCubes","gameState","setGameState","destinationCube","setDestinationCube","startingCube","setStartingCube","command","setCommand","started","setStarted","sizeX","setSizeX","sizeY","setSizeY","uniqueid","idstr","String","fromCharCode","floor","random","ascicode","length","useEffect","endPointX","endPointY","newCubes","j","key","type","value","indexFinder","pos","findIndex","cube","pathTracker","index","min","pathFound","console","log","minIndex","final","forEach","ele","setTimeout","Number","MAX_SAFE_INTEGER","findProximity","className","max","onChange","event","val","target","onClick","Stats","shadowMap","invalidateFrameloop","camera","far","style","fallback","intensity","onPointerDown","stopPropagation","intersections","button","map","OrbitControls","App","Canvas","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ef0d6bb.chunk.js","sourcesContent":["import { Box } from \"@react-three/drei\";\r\n\r\nconst Cube = (props) => {\r\n  return (\r\n    <Box args={[1, 1, 1]} position={[...props.position, 0.5]}>\r\n      <meshPhongMaterial attach=\"material\" color={props.color} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Cube;\r\n","import * as THREE from \"three\";\r\nimport { useLoader } from \"react-three-fiber\";\r\nimport { useMemo } from \"react\";\r\nimport { Box } from \"@react-three/drei\";\r\n\r\nconst Text = ({ children, color = \"#fff\", position, ...props }) => {\r\n  const font = useLoader(THREE.FontLoader, \"/font.json\");\r\n  const config = useMemo(\r\n    () => ({\r\n      font,\r\n      size: 5,\r\n      height: 1.5,\r\n    }),\r\n    [font]\r\n  );\r\n  return (\r\n    <>\r\n      <Box args={[1, 1, 1]} position={[position[0], position[1], 0.5]}>\r\n        <meshPhongMaterial\r\n          attach=\"material\"\r\n          opacity={0}\r\n          transparent\r\n          color=\"green\"\r\n        />\r\n      </Box>\r\n      <group position={[position[0], position[1], 0]} scale={[0.1, 0.1, 0.1]}>\r\n        <mesh position={children > 9 ? [-4, -2, 0] : [-2, -3, 0]}>\r\n          <textBufferGeometry args={[children, config]} />\r\n          <meshBasicMaterial color={color} />\r\n        </mesh>\r\n      </group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import { Line } from \"@react-three/drei\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Lines = (props) => {\r\n  const points = useMemo(() => {\r\n    const [x, y] = props.position;\r\n    const points = [];\r\n    let flag = 1;\r\n    for (let i = -x / 2; i <= x / 2; i++) {\r\n      points.push([i, (-flag * y) / 2, 0.1], [i, (flag * y) / 2, 0.1]);\r\n      flag *= -1;\r\n    }\r\n    points.pop();\r\n    flag = 1;\r\n    for (let i = y / 2; i >= -y / 2; i--) {\r\n      points.push([(flag * x) / 2, i, 0.1], [(-flag * x) / 2, i, 0.1]);\r\n      flag *= -1;\r\n    }\r\n    return points;\r\n  }, [props.position]);\r\n  return <Line points={points} color=\"black\" lineWidth={1} />;\r\n};\r\n\r\nexport default Lines;\r\n","import { Box } from \"@react-three/drei\";\r\n\r\nconst InvisibleCube = (props) => {\r\n  return (\r\n    <Box args={[1, 1, 1]} position={props.position}>\r\n      <meshPhongMaterial\r\n        attach=\"material\"\r\n        transparent\r\n        opacity={0}\r\n        color={props.color}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InvisibleCube;\r\n","import { useFBX } from \"@react-three/drei\";\r\nimport InvisibleCube from \"./InvisibleCube\";\r\nimport Cube from \"./Cube\";\r\nconst DestinationCup = (props) => {\r\n  const fbx = useFBX(\"/WinnerCup.fbx\");\r\n  return (\r\n    <group>\r\n      <InvisibleCube position={[...props.position, 0.5]} color=\"green\" />\r\n      <primitive\r\n        object={fbx}\r\n        dispose={null}\r\n        scale={[0.002, 0.002, 0.002]}\r\n        position={[...props.position, 0.5]}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n      />\r\n    </group>\r\n  );\r\n};\r\nexport default DestinationCup;\r\n","import { Suspense, useEffect, useState } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { Html, OrbitControls, Plane, Stats, useFBX } from \"@react-three/drei\";\r\nimport Cube from \"./Cube\";\r\nimport Text from \"./Text\";\r\nimport Lines from \"./Lines\";\r\nimport InvisibleCube from \"./InvisibleCube\";\r\nimport DestinationCup from \"./DestinationCup\";\r\n\r\nimport \"./App.css\";\r\nconst Canva = ({ size, ...props }) => {\r\n  const [cubes, setCubes] = useState([]);\r\n  const [gameState, setGameState] = useState(-1);\r\n  const [destinationCube, setDestinationCube] = useState(null);\r\n  const [startingCube, setStartingCube] = useState(null);\r\n  const [command, setCommand] = useState(\"Select destination Grid\");\r\n  const [started, setStarted] = useState(false);\r\n  const [sizeX, setSizeX] = useState(4);\r\n  const [sizeY, setSizeY] = useState(4);\r\n\r\n  const uniqueid = () => {\r\n    var idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\r\n    do {\r\n      var ascicode = Math.floor(Math.random() * 42 + 48);\r\n      if (ascicode < 58 || ascicode > 64) {\r\n        idstr += String.fromCharCode(ascicode);\r\n      }\r\n    } while (idstr.length < 32);\r\n\r\n    return idstr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const endPointX = (sizeX - 1) / 2;\r\n    const endPointY = (sizeY - 1) / 2;\r\n    const newCubes = [];\r\n\r\n    for (let i = -endPointX; i <= endPointX; i++) {\r\n      for (let j = -endPointY; j <= endPointY; j++) {\r\n        newCubes.push({\r\n          position: [i, j],\r\n          key: uniqueid(),\r\n          color: \"green\",\r\n          type: null,\r\n          value: -1,\r\n        });\r\n      }\r\n    }\r\n    setCubes(newCubes);\r\n  }, [sizeX, sizeY]);\r\n  const indexFinder = (pos) =>\r\n    cubes.findIndex(\r\n      (cube) => (cube.position[0] == pos.x) & (cube.position[1] == pos.y)\r\n    );\r\n  const clickHandler = (event) => {\r\n    event.stopPropagation();\r\n    if (gameState == -1) return;\r\n    const pos = event.intersections[0].object.position;\r\n    const ele = indexFinder(pos);\r\n    const newCubes = [...cubes];\r\n    if (ele == -1) return;\r\n    if (event.button === 0) {\r\n      if (gameState === 1) {\r\n        newCubes[ele].type = \"obs\";\r\n      } else if ((gameState === 2) & (startingCube == null)) {\r\n        newCubes[ele].type = \"obs\";\r\n        newCubes[ele].color = \"red\";\r\n        setStartingCube(ele);\r\n      } else {\r\n        if (destinationCube == null) {\r\n          newCubes[ele].type = \"des\";\r\n          newCubes[ele].value = 0;\r\n          setDestinationCube(ele);\r\n        }\r\n      }\r\n    } else {\r\n      newCubes[ele].type = null;\r\n      if ((gameState == 1) & (ele == destinationCube)) {\r\n        newCubes[ele].type = \"obs\";\r\n      }\r\n      if ((gameState == 2) & (ele == startingCube)) {\r\n        newCubes[ele].color = \"green\";\r\n        newCubes[ele].value = -1;\r\n        setStartingCube(null);\r\n      }\r\n      if (!gameState) {\r\n        setDestinationCube(null);\r\n      }\r\n    }\r\n\r\n    setCubes(() => newCubes);\r\n  };\r\n  const pathTracker = (index, min, pathFound) => {\r\n    console.log(pathFound);\r\n    if (pathFound) {\r\n      console.log(\"path found\");\r\n      return;\r\n    }\r\n    if (index == destinationCube) {\r\n      console.log(\"path found\");\r\n      return;\r\n    }\r\n    const newCubes = [...cubes];\r\n    const pos = cubes[index].position;\r\n    let minIndex = null;\r\n    let final = pathFound;\r\n    const neighbourhs = [\r\n      indexFinder({ x: pos[0] - 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0] + 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0], y: pos[1] - 1 }),\r\n      indexFinder({ x: pos[0], y: pos[1] + 1 }),\r\n    ];\r\n    neighbourhs.forEach((ele) => {\r\n      if (ele == destinationCube) {\r\n        console.log(\"des found\");\r\n        final = true;\r\n      }\r\n      if (ele != -1) {\r\n        console.log(ele, newCubes[ele].value, min);\r\n      }\r\n\r\n      if (\r\n        ele != -1 &&\r\n        newCubes[ele].type == \"text\" &&\r\n        newCubes[ele].value < min\r\n      ) {\r\n        min = newCubes[ele].value;\r\n        minIndex = ele;\r\n      }\r\n    });\r\n    if (minIndex != null) {\r\n      newCubes[minIndex].type = \"obs\";\r\n      newCubes[minIndex].color = \"red\";\r\n      setCubes(() => newCubes);\r\n      setTimeout(() => pathTracker(minIndex, min, final), 500);\r\n    } else {\r\n      console.log(index, destinationCube);\r\n      if (final) {\r\n        setCommand(\"Path found\");\r\n      } else {\r\n        setCommand(\"Path not found\");\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (cubes.length < 1) return;\r\n    const index = cubes.findIndex((ele) => ele.type == null);\r\n    if (index == -1 && started == false) {\r\n      setStarted(true);\r\n      console.log(\"oasjoias\");\r\n      setTimeout(() => {\r\n        console.log(\"completed proximity\");\r\n        setCommand(\"Starting path tracker\");\r\n        pathTracker(startingCube, Number.MAX_SAFE_INTEGER, false);\r\n      }, 2000);\r\n    }\r\n  }, [cubes]);\r\n  const findProximity = (index) => {\r\n    const newCubes = [...cubes];\r\n    const pos = cubes[index].position,\r\n      value = cubes[index].value;\r\n    const neighbourhs = [\r\n      indexFinder({ x: pos[0] - 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0] + 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0], y: pos[1] - 1 }),\r\n      indexFinder({ x: pos[0], y: pos[1] + 1 }),\r\n    ];\r\n    neighbourhs.forEach((ele) => {\r\n      if (\r\n        ele != -1 &&\r\n        newCubes[ele].type == null &&\r\n        newCubes[ele].value == -1\r\n      ) {\r\n        newCubes[ele].value = value + 1;\r\n        newCubes[ele].color = \"red\";\r\n        newCubes[ele].type = \"text\";\r\n        setTimeout(() => {\r\n          setCubes(() => newCubes);\r\n          findProximity(ele);\r\n        }, 1000);\r\n      }\r\n    });\r\n  };\r\n  const changeState = () => {\r\n    if (!gameState & (destinationCube != null)) {\r\n      setGameState(1);\r\n      setCommand(\"left click to add obstacles and right click to remove them\");\r\n    } else if (gameState == 1) {\r\n      setCommand(\"Select the starting cube\");\r\n      setGameState(2);\r\n    } else if (gameState == 2) {\r\n      setCommand(\"finding proximity values\");\r\n      setGameState(3);\r\n      findProximity(destinationCube);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"wrapper\">\r\n        {gameState == -1 ? (\r\n          <>\r\n            <h1 className=\"text\">Select the grid Size</h1>\r\n            <h1 className=\"text\">X :</h1>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={sizeX}\r\n              onChange={(event) => {\r\n                const val = event.target.value;\r\n                if (val > 10) {\r\n                  setSizeX(20);\r\n                } else {\r\n                  setSizeX(val * 2);\r\n                }\r\n              }}\r\n            />\r\n            <h1 className=\"text\">Y :</h1>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={sizeY}\r\n              onChange={(event) => {\r\n                const val = event.target.value;\r\n                if (val > 10) {\r\n                  setSizeY(20);\r\n                } else {\r\n                  setSizeY(val * 2);\r\n                }\r\n              }}\r\n            />\r\n            <button className=\"gameStateButton\" onClick={() => setGameState(0)}>\r\n              Continue\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1 className=\"text\">{command}</h1>\r\n            <button onClick={changeState} className=\"gameStateButton\">\r\n              done\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Stats />\r\n      <Canvas\r\n        shadowMap\r\n        invalidateFrameloop\r\n        camera={{ position: [0, 15, 15], far: 100 }}\r\n        style={{ height: \"calc(100vh - 50px)\" }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <group rotation={[-Math.PI / 2, 0, 0]}>\r\n            <Plane args={[sizeX, sizeY]} />\r\n            <ambientLight intensity={1} />\r\n            <spotLight intensity={2} position={[10, 10, 10]} />\r\n            <group onPointerDown={clickHandler}>\r\n              {cubes.map((cube) => {\r\n                if (cube.type == null) {\r\n                  return <InvisibleCube position={cube.position} />;\r\n                } else if (cube.type == \"des\") {\r\n                  return <DestinationCup position={cube.position} />;\r\n                } else if (cube.type == \"text\") {\r\n                  return (\r\n                    <Text\r\n                      position={cube.position}\r\n                      children={\"\" + cube.value}\r\n                      color={cube.color}\r\n                    />\r\n                  );\r\n                } else {\r\n                  return <Cube position={cube.position} color={cube.color} />;\r\n                }\r\n              })}\r\n            </group>\r\n            <Lines position={[sizeX, sizeY]} />\r\n          </group>\r\n          <OrbitControls\r\n          // maxPolarAngle={Math.PI / 1.1}\r\n          // minPolarAngle={Math.PI / 1.2}\r\n          // minAzimuthAngle={Math.PI / 4}\r\n          // maxAzimuthAngle={Math.PI / 2}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canva;\r\n","import \"./App.css\";\nimport { Suspense, useState } from \"react\";\nimport Canvas from \"./Canvas\";\n\nfunction App() {\n  return <Canvas size={[20, 20]} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}