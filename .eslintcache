[{"D:\\development\\gui-search\\src\\index.js":"1","D:\\development\\gui-search\\src\\App.js":"2","D:\\development\\gui-search\\src\\reportWebVitals.js":"3","D:\\development\\gui-search\\src\\Cube.js":"4","D:\\development\\gui-search\\src\\Lines.js":"5","D:\\development\\gui-search\\src\\Text.js":"6","D:\\development\\gui-search\\src\\Canvas.js":"7","D:\\development\\gui-search\\src\\InvisibleCube.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":173,"mtime":1612882212851,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":260,"mtime":1612848877280,"results":"13","hashOfConfig":"10"},{"size":680,"mtime":1612339706885,"results":"14","hashOfConfig":"10"},{"size":983,"mtime":1612881877039,"results":"15","hashOfConfig":"10"},{"size":9040,"mtime":1612908993621,"results":"16","hashOfConfig":"10"},{"size":396,"mtime":1612929987457,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"mcugki",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\development\\gui-search\\src\\index.js",[],["37","38"],"D:\\development\\gui-search\\src\\App.js",["39","40"],"import \"./App.css\";\nimport { Suspense, useState } from \"react\";\nimport Canvas from \"./Canvas\";\n\nfunction App() {\n  return <Canvas size={[20, 20]} />;\n}\n\nexport default App;\n","D:\\development\\gui-search\\src\\reportWebVitals.js",[],"D:\\development\\gui-search\\src\\Cube.js",[],"D:\\development\\gui-search\\src\\Lines.js",[],"D:\\development\\gui-search\\src\\Text.js",[],"D:\\development\\gui-search\\src\\Canvas.js",["41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"import { Suspense, useEffect, useState } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { Html, OrbitControls, Plane, Stats, useFBX } from \"@react-three/drei\";\r\nimport Cube from \"./Cube\";\r\nimport Text from \"./Text\";\r\nimport Lines from \"./Lines\";\r\nimport InvisibleCube from \"./InvisibleCube\";\r\n\r\nimport \"./App.css\";\r\nconst Canva = ({ size, ...props }) => {\r\n  const [cubes, setCubes] = useState([]);\r\n  const [gameState, setGameState] = useState(-1);\r\n  const [destinationCube, setDestinationCube] = useState(null);\r\n  const [startingCube, setStartingCube] = useState(null);\r\n  const [command, setCommand] = useState(\"Select destination Grid\");\r\n  const [started, setStarted] = useState(false);\r\n  const [sizeX, setSizeX] = useState(4);\r\n  const [sizeY, setSizeY] = useState(4);\r\n\r\n  const uniqueid = () => {\r\n    var idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\r\n    do {\r\n      var ascicode = Math.floor(Math.random() * 42 + 48);\r\n      if (ascicode < 58 || ascicode > 64) {\r\n        idstr += String.fromCharCode(ascicode);\r\n      }\r\n    } while (idstr.length < 32);\r\n\r\n    return idstr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const endPointX = (sizeX - 1) / 2;\r\n    const endPointY = (sizeY - 1) / 2;\r\n    const newCubes = [];\r\n\r\n    for (let i = -endPointX; i <= endPointX; i++) {\r\n      for (let j = -endPointY; j <= endPointY; j++) {\r\n        newCubes.push({\r\n          position: [i, j],\r\n          key: uniqueid(),\r\n          color: \"green\",\r\n          type: null,\r\n          value: -1,\r\n        });\r\n      }\r\n    }\r\n    setCubes(newCubes);\r\n  }, [sizeX, sizeY]);\r\n  const indexFinder = (pos) =>\r\n    cubes.findIndex(\r\n      (cube) => (cube.position[0] == pos.x) & (cube.position[1] == pos.y)\r\n    );\r\n  const clickHandler = (event) => {\r\n    event.stopPropagation();\r\n    if (gameState == -1) return;\r\n    const pos = event.intersections[0].object.position;\r\n    const ele = indexFinder(pos);\r\n    const newCubes = [...cubes];\r\n    if (ele == -1) return;\r\n    if (event.button === 0) {\r\n      if (gameState === 1) {\r\n        newCubes[ele].type = \"obs\";\r\n      } else if ((gameState === 2) & (startingCube == null)) {\r\n        newCubes[ele].type = \"obs\";\r\n        newCubes[ele].color = \"red\";\r\n        setStartingCube(ele);\r\n      } else {\r\n        if (destinationCube == null) {\r\n          newCubes[ele].type = \"des\";\r\n          newCubes[ele].value = 0;\r\n          setDestinationCube(ele);\r\n        }\r\n      }\r\n    } else {\r\n      newCubes[ele].type = null;\r\n      if ((gameState == 1) & (ele == destinationCube)) {\r\n        newCubes[ele].type = \"obs\";\r\n      }\r\n      if ((gameState == 2) & (ele == startingCube)) {\r\n        newCubes[ele].color = \"green\";\r\n        newCubes[ele].value = -1;\r\n        setStartingCube(null);\r\n      }\r\n      if (!gameState) {\r\n        setDestinationCube(null);\r\n      }\r\n    }\r\n\r\n    setCubes(() => newCubes);\r\n  };\r\n  const pathTracker = (index, min, pathFound) => {\r\n    console.log(pathFound);\r\n    if (pathFound) {\r\n      console.log(\"path found\");\r\n      return;\r\n    }\r\n    if (index == destinationCube) {\r\n      console.log(\"path found\");\r\n      return;\r\n    }\r\n    const newCubes = [...cubes];\r\n    const pos = cubes[index].position;\r\n    let minIndex = null;\r\n    let final = pathFound;\r\n    const neighbourhs = [\r\n      indexFinder({ x: pos[0] - 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0] + 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0], y: pos[1] - 1 }),\r\n      indexFinder({ x: pos[0], y: pos[1] + 1 }),\r\n    ];\r\n    neighbourhs.forEach((ele) => {\r\n      if (ele == destinationCube) {\r\n        console.log(\"des found\");\r\n        final = true;\r\n      }\r\n      if (ele != -1) {\r\n        console.log(ele, newCubes[ele].value, min);\r\n      }\r\n\r\n      if (\r\n        ele != -1 &&\r\n        newCubes[ele].type == \"text\" &&\r\n        newCubes[ele].value < min\r\n      ) {\r\n        min = newCubes[ele].value;\r\n        minIndex = ele;\r\n      }\r\n    });\r\n    if (minIndex != null) {\r\n      newCubes[minIndex].type = \"obs\";\r\n      newCubes[minIndex].color = \"red\";\r\n      setCubes(() => newCubes);\r\n      setTimeout(() => pathTracker(minIndex, min, final), 500);\r\n    } else {\r\n      console.log(index, destinationCube);\r\n      if (final) {\r\n        setCommand(\"Path found\");\r\n      } else {\r\n        setCommand(\"Path not found\");\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (cubes.length < 1) return;\r\n    const index = cubes.findIndex((ele) => ele.type == null);\r\n    if (index == -1 && started == false) {\r\n      setStarted(true);\r\n      console.log(\"oasjoias\");\r\n      setTimeout(() => {\r\n        console.log(\"completed proximity\");\r\n        setCommand(\"Starting path tracker\");\r\n        pathTracker(startingCube, Number.MAX_SAFE_INTEGER, false);\r\n      }, 2000);\r\n    }\r\n  }, [cubes]);\r\n  const findProximity = (index) => {\r\n    const newCubes = [...cubes];\r\n    const pos = cubes[index].position,\r\n      value = cubes[index].value;\r\n    const neighbourhs = [\r\n      indexFinder({ x: pos[0] - 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0] + 1, y: pos[1] }),\r\n      indexFinder({ x: pos[0], y: pos[1] - 1 }),\r\n      indexFinder({ x: pos[0], y: pos[1] + 1 }),\r\n    ];\r\n    neighbourhs.forEach((ele) => {\r\n      if (\r\n        ele != -1 &&\r\n        newCubes[ele].type == null &&\r\n        newCubes[ele].value == -1\r\n      ) {\r\n        newCubes[ele].value = value + 1;\r\n        newCubes[ele].color = \"red\";\r\n        newCubes[ele].type = \"text\";\r\n        setTimeout(() => {\r\n          setCubes(() => newCubes);\r\n          findProximity(ele);\r\n        }, 1000);\r\n      }\r\n    });\r\n  };\r\n  const changeState = () => {\r\n    if (!gameState & (destinationCube != null)) {\r\n      setGameState(1);\r\n      setCommand(\"left click to add obstacles and right click to remove them\");\r\n    } else if (gameState == 1) {\r\n      setCommand(\"Select the starting cube\");\r\n      setGameState(2);\r\n    } else if (gameState == 2) {\r\n      setCommand(\"finding proximity values\");\r\n      setGameState(3);\r\n      findProximity(destinationCube);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"wrapper\">\r\n        {gameState == -1 ? (\r\n          <>\r\n            <h1 className=\"text\">Select the grid Size</h1>\r\n            <h1 className=\"text\">X :</h1>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={sizeX}\r\n              onChange={(event) => {\r\n                const val = event.target.value;\r\n                if (val > 10) {\r\n                  setSizeX(20);\r\n                } else {\r\n                  setSizeX(val * 2);\r\n                }\r\n              }}\r\n            />\r\n            <h1 className=\"text\">Y :</h1>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={sizeY}\r\n              onChange={(event) => {\r\n                const val = event.target.value;\r\n                if (val > 10) {\r\n                  setSizeY(20);\r\n                } else {\r\n                  setSizeY(val * 2);\r\n                }\r\n              }}\r\n            />\r\n            <button className=\"gameStateButton\" onClick={() => setGameState(0)}>\r\n              Continue\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1 className=\"text\">{command}</h1>\r\n            <button onClick={changeState} className=\"gameStateButton\">\r\n              done\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Stats />\r\n      <Canvas\r\n        shadowMap\r\n        invalidateFrameloop\r\n        camera={{ position: [0, 15, 15], far: 100 }}\r\n        style={{ height: \"calc(100vh - 50px)\" }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <group rotation={[-Math.PI / 2, 0, 0]}>\r\n            <Plane args={[sizeX, sizeY]} />\r\n            <ambientLight intensity={1} />\r\n            <spotLight intensity={2} position={[10, 10, 10]} />\r\n            <group onPointerDown={clickHandler}>\r\n              {cubes.map((cube) => {\r\n                if (cube.type == null) {\r\n                  return <InvisibleCube position={cube.position} />;\r\n                } else if (cube.type == \"des\") {\r\n                  return <Cube position={cube.position} color=\"hotpink\" />;\r\n                } else if (cube.type == \"text\") {\r\n                  return (\r\n                    <Text\r\n                      position={cube.position}\r\n                      children={\"\" + cube.value}\r\n                      color={cube.color}\r\n                    />\r\n                  );\r\n                } else {\r\n                  return <Cube position={cube.position} color={cube.color} />;\r\n                }\r\n              })}\r\n            </group>\r\n            <Lines position={[sizeX, sizeY]} />\r\n          </group>\r\n          <OrbitControls\r\n          // maxPolarAngle={Math.PI / 1.1}\r\n          // minPolarAngle={Math.PI / 1.2}\r\n          // minAzimuthAngle={Math.PI / 4}\r\n          // maxAzimuthAngle={Math.PI / 2}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canva;\r\n","D:\\development\\gui-search\\src\\InvisibleCube.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"74","line":2,"column":20,"nodeType":"72","messageId":"73","endLine":2,"endColumn":28},{"ruleId":"70","severity":1,"message":"75","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":3,"column":45,"nodeType":"72","messageId":"73","endLine":3,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":52,"column":35,"nodeType":"79","messageId":"80","endLine":52,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":52,"column":65,"nodeType":"79","messageId":"80","endLine":52,"endColumn":67},{"ruleId":"77","severity":1,"message":"78","line":56,"column":19,"nodeType":"79","messageId":"80","endLine":56,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":60,"column":13,"nodeType":"79","messageId":"80","endLine":60,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":77,"column":22,"nodeType":"79","messageId":"80","endLine":77,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":77,"column":35,"nodeType":"79","messageId":"80","endLine":77,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":80,"column":22,"nodeType":"79","messageId":"80","endLine":80,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":80,"column":35,"nodeType":"79","messageId":"80","endLine":80,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":98,"column":15,"nodeType":"79","messageId":"80","endLine":98,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":113,"column":15,"nodeType":"79","messageId":"80","endLine":113,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":117,"column":15,"nodeType":"79","messageId":"80","endLine":117,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":122,"column":13,"nodeType":"79","messageId":"80","endLine":122,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":123,"column":28,"nodeType":"79","messageId":"80","endLine":123,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":147,"column":15,"nodeType":"79","messageId":"80","endLine":147,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":147,"column":32,"nodeType":"79","messageId":"80","endLine":147,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":156,"column":6,"nodeType":"84","endLine":156,"endColumn":13,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"81","line":169,"column":13,"nodeType":"79","messageId":"80","endLine":169,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":171,"column":29,"nodeType":"79","messageId":"80","endLine":171,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":187,"column":26,"nodeType":"79","messageId":"80","endLine":187,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":190,"column":26,"nodeType":"79","messageId":"80","endLine":190,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":199,"column":20,"nodeType":"79","messageId":"80","endLine":199,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":261,"column":38,"nodeType":"79","messageId":"80","endLine":261,"endColumn":40},{"ruleId":"77","severity":1,"message":"78","line":263,"column":38,"nodeType":"79","messageId":"80","endLine":263,"endColumn":40},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Html' is defined but never used.","'useFBX' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pathTracker', 'started', and 'startingCube'. Either include them or remove the dependency array.","ArrayExpression",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [cubes, pathTracker, started, startingCube]",{"range":"91","text":"92"},[4767,4774],"[cubes, pathTracker, started, startingCube]"]